name: Validate

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.0
        with:
          deno-version: v1.x

      - name: Lint code
        run: deno lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.0
        with:
          deno-version: v1.x

      - name: Run Neo4j
        run: docker-compose -f "docker-compose.yml" up -d

      - name: Wait for Neo4j
        run: sleep 10

      - name: Set up test suite
        run: deno run --allow-net --allow-env --allow-write vertex/lib/test-setup.ts

      - name: Run tests
        run: deno test --allow-net --allow-env --allow-read

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down

  # Until https://github.com/neo4j/neo4j/issues/12844 is solved, we need to run these tests on a separate Neo4j server:
  test-2:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.0
        with:
          deno-version: v1.x

      - name: Run Neo4j
        run: docker-compose -f "docker-compose.yml" up -d

      - name: Wait for Neo4j
        run: sleep 10

      - name: Set up test suite
        run: deno run --allow-net --allow-env --allow-write vertex/lib/test-setup.ts

      - name: Run disruptive tests
        run: RUN_NEO44_DISRUPTIVE_TESTS=true deno test --allow-net --allow-env --allow-read --filter DISRUPTIVE vertex/layer4/action-runner.test.ts

      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
