image: node:14

variables:
  # Set default neo4j password to "vertex"
  NEO4J_AUTH: neo4j/vertex
  # We need APOC functionality like triggers:
  NEO4JLABS_PLUGINS: '["apoc"]'
  # Enable automatic UUID creation on nodes:
  NEO4J_apoc_uuid_enabled: "true"
  NEO4J_apoc_trigger_enabled: "true"


# Cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm/

before_script:
  - npm ci --cache .npm --prefer-offline

test:
  stage: test
  services:
    - neo4j:4.2
  script:
    - npm run test

lint:
  stage: test
  script:
    - npm run lint

build:
  # This is considered a test because it ensures that the build happens correctly, but doesn't (yet) do anything with the result
  stage: test
  script:
    - npm run build
    - mv dist dist-cached
  artifacts:
    paths:
      - dist-cached/

publish:
  stage: deploy
  only:
    refs:
      - main
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$GIT_SSH_PRIV_KEY")
    - mkdir -p ~/.ssh
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
  script:
    - git config user.name "GitLab CI Bot"
    - git config user.email "team@technotes.org"
    - git branch  # To check if the following fetch is needed.
    - git fetch origin dist
    - git checkout -b dist origin/dist
    - git merge origin/main --no-ff -m "Update distribution with main"
    - rm -rf dist
    - mv dist-cached dist
    - rm -f dist/.gitignore
    - git add dist
    - git commit --amend --no-edit
    - git push origin dist:dist
